type Block @entity {
  id:                                   ID!
  date:                                 String!
  time:                                 BigInt!
  number:                               BigInt!
  hash:                                 String!
  previous:                             String!
  producer:                             String!
  transactions: [Transaction!]! @derivedFrom(field: "block")
}

type Transaction @entity {
  id:                     ID!
  block:                  Block!
  index:                  BigInt!
  hash:                   String!
  elapsed:                BigInt!
  netUsage:               BigInt!
  actions:                [Action!]! @derivedFrom(field: "transaction")
  receivers:              [Receiver!]! @derivedFrom(field: "transaction")
}

type Action @entity {
  id:                       ID!
  ordinal:                  BigInt!
  account:                  String!
  name:                     String!
  jsonData:                 String!
  rawData:                  String!
  transaction:              Transaction!
  block:                    Block!
  authorization:            [PermissionLevel!]! @derivedFrom(field: "action")
}

type Receiver @entity {
  id:                 ID!
  receiver:           String!
  transaction:        Transaction!
}

type PermissionLevel @entity {
  id:                 ID!
  actor:              String!
  permission:         String!
  action:             Action!
}